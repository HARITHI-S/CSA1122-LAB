CONFERENCE MANAGEMENT SYSTEM

AIM:
To draw the diagrams [use case, activity, sequence, collaboration, class,component, deployment, package] for Conference management system

SOFTWAREREQUIREMENTSSPECIFICATION

SL.NO
SOFTWAREREQUIREMENTSSPECIFICATION
1.0
HardwareRequirements
1.1
SoftwareRequirements
1.2
Problem Analysis and ProjectPlan
1.3
Projectdescription
1.4
Reference

1.0 ​HARDWAREREQUIREMENTS:
Intel Pentium ProcessorI3/I5
1.1 ​SOFTWAREREQUIREMENTS:
Rationalrose/ArgoUML
1.2 ​PROBLEMANALYSISANDPROJECTPLANNING
The Conference Management System is anonlinewebsiteinwhichcandidatecansubmit the paper and register themselves and then attend the conference. The paper will be reviewed. The details of the conference, date and time will bemadeavailabletothemthroughthewebsite. After getting the confirmation details the candidate should submit the revised and cameraready paper. Then the registration process will be done.
1.3 ​PROJECTDESCRIPTION:
This software is designed to manage the details of the process thatwillbetakenplacein the conference in a place. It works along with theorganizer,whoarrangesalltheseprogramand central management system, which consists of the allthedetailsofthememberwhoparticipates in the presentation
 1.4 ​REFERENCES:
IEEE Software Requirement Specificationformat.


USE CASEDIAGRAM:
This diagram will contain the actors, use cases which are givenbelow
Actors:Member,Organizer,Centralsystem
Usecase:planning,invitedelegates,allocateseats,presentingpaper,prizedistribution

CLASSDIAGRAM:
This diagram consists of the following classes, attributes and theiroperations

ACTIVITYDIAGRAM:
This diagram will have the activities as Startpoint,Endpoint,Decision boxes as given below:
Activities: Invite delegates, Allocate seats, Presenting paper, Choose the winnerDecision box:Whether it is reserved or not, Whether the presentation is goodornot.

SEQUENCEDIAGRAM:
This diagram consists of the objects, messages and returnmessages.
Object:Member,Organiser,Centralmanagementsystem

COLLABORATIONDIAGRAM:
This diagram contains the objects and actors. This will be obtained bythecompletionof the sequence diagram and pressing the F5 key.

COMPONENTDIAGRAM:
The component diagram is represented by figure dependency and it is a graph ofdesign of figure dependency. The component diagram's main purpose is to show the structural relationships between the components of a systems. It is represented by boxed figure. Dependencies are represented by communication association.

DEPLOYMENTDIAGRAM:
A deployment diagram in the unified modeling language serves to model thephysical deployment of artifacts on deployment targets. Deployment diagrams show "the allocation of artifacts to nodes according to the Deployments defined between them. It is represented by 3- dimentional box. Dependencies are represented by communication association

PACKAGEDIAGRAM:
A package diagram in unified modeling language that depicts the dependencies between the packages that make up a model. A Package Diagram (PD) shows a grouping of elements in the OO model, and is a Cradle extension to UML. PDs can be used toshowgroupsof classes in ClassDiagrams(CDs),groupsofcomponentsorprocessesinComponentDiagrams (CPDs),orgroupsofprocessorsinDeploymentDiagrams(DPDs).Therearethreetypesoflayer. They are
    • User interfacelayer
    • Domainlayer
    • Technicalserviceslayer



PROGRAM CODING:
MEMBER1:
public classmember
{
publicintegername; public integerid;
public integerproof;
public void winningprize()
{
}
public voidmember()
{
}
}
ORGANIZER:
public classorganizer
{
publicintegermemberattributes; public integer function details;
public void choosing forwinner()
{
}
}
CENTRAL MANAGEMENTSYSTEM:
public class central managementsystem
{
public integer functiondetails;
publicintegerdetailofseatallocation; public void storing()
{
}
public void updatingdetails()
{
}
}

RESULT:
Thus draw the diagrams [use case, activity, sequence, collaboration, class, statechart, component, deployment, package] for Conference management system has been designed, executed and output is verified.
